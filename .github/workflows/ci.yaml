name: Build, Push to GHCR, and Deploy to Kubernetes

on:
  push:
    branches: [ master ]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Get commit number
      id: get_commit_number
      run: echo "::set-output name=commit_number::$(git rev-list --count HEAD)"

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ github.repository }}:latest
          ${{ github.repository }}:${{ github.sha }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        OCTO_KEY: ${{ secrets.OCTO_KEY }}
        MESSAGE: ${{ secrets.MESSAGE }}
      run: |
        echo "$KUBE_CONFIG" > kubeconfig
        export KUBECONFIG=./kubeconfig

        sed -i 's|image: .*|image: ${{ github.repository }}:${{ github.sha }}|' k8s.yaml

        kubectl apply -f k8s.yaml

        kubectl create secret generic app-secrets \
          --from-literal=MONGO_URI="$MONGO_URI" \
          --from-literal=BOT_TOKEN="$BOT_TOKEN" \
          --from-literal=OCTO_KEY="$OCTO_KEY" \
          --from-literal=MESSAGE="$MESSAGE" \
          -o yaml --dry-run=client | kubectl apply -f -

        kubectl rollout restart deployment/flirty

        kubectl rollout status deployment/flirty --timeout=300s

        if [ $? -ne 0 ]; then
          echo "Deployment did not complete in time. Printing debugging information:"
          kubectl get pods
          kubectl describe deployment flirty
          kubectl describe pods -l app=flirty
          kubectl logs -l app=flirty --all-containers --tail=100
          exit 1
        fi

        echo "Deployment completed successfully"
